name: Update Policy Feed

on:
  schedule:
    - cron: "0 */6 * * *"        # every 6 hours (UTC)
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: update-policy-feed
  cancel-in-progress: false

env:
  TZ: UTC
  PYTHONHASHSEED: "0"
  PYTHONIOENCODING: "UTF-8"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main              # ensure cron uses latest main
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure data directory exists
        run: mkdir -p data

      # Optional: fail early if non-ASCII creeps into the script again (e.g., em dash)
      - name: Validate script is ASCII-only
        run: |
          if ! LC_ALL=C grep -nP "[^\x00-\x7F]" update_policy_news.py >/dev/null; then
            echo "ASCII check passed."
          else
            echo "Non-ASCII characters found in update_policy_news.py"
            LC_ALL=C grep -nP "[^\x00-\x7F]" update_policy_news.py || true
            exit 1
          fi

      - name: Run updater
        run: python update_policy_news.py

      - name: Did JSON change?
        id: diff
        run: |
          if git diff --quiet --exit-code -- data/policyNews.json; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Show diff
        if: steps.diff.outputs.changed == 'true'
        run: git --no-pager diff -- data/policyNews.json || true

      - name: Commit updated JSON
        if: steps.diff.outputs.changed == 'true'
        run: |
          git config user.name "actions-user"
          git config user.email "actions@users.noreply.github.com"
          git add data/policyNews.json
          git commit -m "Automated policy feed update"

      - name: Rebase onto latest main
        if: steps.diff.outputs.changed == 'true'
        run: |
          git fetch origin main
          git rebase origin/main

      - name: Push (fast-forward or safe force)
        if: steps.diff.outputs.changed == 'true'
        run: |
          set -e
          if git push origin HEAD:main; then
            echo "Normal push succeeded."
          else
            echo "Normal push rejected. Retrying with --force-with-lease."
            git push --force-with-lease origin HEAD:main
          fi



